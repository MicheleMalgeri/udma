services:

  mongodb:
    image: mongo:8.0.6
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: udma
      MAIN_DB_COLLECTION: medical_record
    networks:
      - mongo
    ports:
      - "27017:27017"
    volumes:
      - ./docker/mongo/volume:/data/db
      - ./script/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8085:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - mongo

  minio:
    privileged: true
    container_name: minio
    image: docker.io/bitnami/minio:2022
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - minionetwork
    volumes:
      - './docker/minio/minio_data:/data'
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
      MINIO_DEFAULT_BUCKETS: mdfiles

  mysql:
    container_name: mysqldb
    image: mysql:9.2.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: admin
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: udma
    volumes:
      - './docker/mysql/volume:/var/lib/mysql'
      - './script/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql'
    ports:
      - '3307:3306'

networks:
  minionetwork:
    driver: bridge
  mongo:
    name: mongo
    driver: bridge